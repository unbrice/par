/*
 * Copyright Â©2011 Brice Arnould
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package net.vleu.par.protocolbuffer;

// This file relies on plugins to generate service code.
option cc_generic_services = false;
option java_generic_services = false;
option py_generic_services = false;

option optimize_for = SPEED;

import "devices.proto";

/*
 * Used for acknowledgements and prevention of double deliveries.
 * See "big_picture.txt" at the root of the project for a description
 * of its usage
 */
message DirectiveIdData {
	/*
	 * An integer identifiying a particular instance of a software
	 * that can create directives.
	 */
	required fixed64 creator_id = 1;
	/*
	 * An integer which is incremented each time a given instance
	 * creates a new directive.
	 */
	required uint32 timestamp = 2;
}

message HapticNotificationData {
	/* If absent, we will use the default sequence */
	repeated uint32 vibration_sequence = 1 [packed=true];
}

message StatusBarNotificationData {
	/* If empty, a default text will be shown */
	optional string text = 1;
	/* If empty, a default title will be shown */
	optional string title = 2;
}

message DirectiveData {
	/*
	 * Used for acknowledgements and prevention of double deliveries.
	 * See "big_picture.txt" at the root of the project for a description
	 * of its usage
	 * TODO : Implement acks and set this as required
	 */
	optional DirectiveIdData id = 1;
	repeated HapticNotificationData haptic_notification = 16;
	repeated StatusBarNotificationData statusbar_notification = 17;
}